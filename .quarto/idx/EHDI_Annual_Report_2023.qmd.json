{"title":"EHDI 2023 Annual Report","markdown":{"yaml":{"title":"EHDI 2023 Annual Report","author":"Alaska Early Hearing Detection & Intervention","format":"html","prefer-html":true,"editor":"visual"},"headingText":"EHDI Variables","containsRefs":false,"markdown":"\n\n\nFrom [CDC.com](https://www.cdc.gov/hearing-loss-children/data/ehdi-data.html) Formulas for Receipt of EHDI Services\n\n![Timely EHDI surveillance Measurement](https://www.cdc.gov/hearing-loss-children/media/images/2024/08/349109-A_WEB_EHDI-Infographic_7.jpg)\n\n## EHDI Metrics\n\n### **Hearing Screening (By 1-month)**\n\nCDC Definition\n\n**% Screened** = (# Total Screened / \\# Total Occurrent Births according to EHDI program) x 100\n\nOZ Variables\n\n-   By 30 Days Old - Hearing Screen\n-   date_and_time_of_first_screen + patients_date_of_birth\n-   2023 birth certificate births\n-   cdc_hearing_outcome\n\n### **Diagnostic Evaluation**\n\nCDC Definition\n\n**% Diagnosed** = (# Total Diagnosed / \\# Total Not Pass) x 100\n\nOZ Variables\n\n-   By 90 Days Old - Diagnose as deaf or hard of hearing (DHH)\n-   first_dx_session_date + patients_date_of_birth\n-   cdc_hearing_outcome\n\n### **Intervention Enrollment**\n\nCDC Definition\n\n**% EI Enrollment** = (# Total Enrolled in EI (Part C and Non-Part C) / \\# Total Infants who are DHH) x 100\n\nOZ Variables\n\n-   By 180 Days old - Enroll in early intervention\n-   date_of_part_c_enrollment - patients_date_of_birth\n-   date_of_non_part_c_enrollment - patients_date_of_birth\n-   cdc_dx_outcome\n\n```{r}\n#| warning: false  \n#| message: false  \n#| echo: false  \n\nlibrary(tidyverse)         # contains packages like dplyr\nlibrary(lubridate)         # works with modifying dates easily\nlibrary(janitor) \nlibrary(sf) \nlibrary(viridis) \nlibrary(plotly) \nlibrary(purrr) \nlibrary(DT)  \n\nload(\"//hssancconf/DPH-WCFH_Restricted/Newborn/NBHS/2023 Data/research_dataframe2023.Rda\")\n```\n\n```{r}\n#| warning: false  \n#| message: false  #\n#| echo: false  \n\n# // Load in HAVRS Year-To-Date file // # \n\nfp_vs <- file.path(\"R:\\\\ResData\\\\BVS MASTER FILES\\\\AUTHORIZED RESEARCHERS ONLY\\\\current\\\\birth_statistical.sas7bdat\") \n\nbvs <- haven::read_sas(fp_vs) %>%    filter(dob_yr == \"2023\",           bplace_state == \"ALASKA\") %>%                   # Update Year\n  mutate_all(.funs = as.character) %>% # converting all column to character\n  mutate(dob = ymd(dob))\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n# Recoding birthcertificate variables\n# Sex\nbirth2 <- bvs %>%\n  mutate(sex = ifelse(sex == \"N\", NA, sex)) %>%\n  mutate(sex = ifelse(sex == \"M\", \"Male\", \n                      ifelse(sex == \"F\", \"Female\", sex)))\n\n# Dad last name on BC\nbirth3 <- birth2 %>%\n  mutate(flname = ifelse(is.na(flname), \"\", flname)) %>%\n  mutate(DName = ifelse(flname == \"\", \"None\", \"Present\"))\n\n\n#Smoking use during pregnancy\nbirth4 <- birth3 %>%\n  mutate(smoking_status = ifelse(tobac == \"Y\", \"Reported smoking\", \n                                 ifelse(tobac == \"N\", \"Reported not smoking\", \n                                        ifelse(tobac == \"U\", NA, tobac))))\n\n#Maternal education\nbirth5 <- birth4 %>%\n  mutate(M_EDU = ifelse(meduc_code_brg == 2, \"12 years\",\n                        ifelse(meduc_code_brg == 1, \"<12 years\",\n                               ifelse(meduc_code_brg == 3, \"+12 years\", NA))))\n\n\n#Alcohol use during pregnancy\nbirth6 <- birth5 %>%\n  mutate(alcohol_use = ifelse(alcohol == \"U\", NA, \n                              ifelse(alcohol == \"Y\", \"Reported drinking\", \n                                     ifelse(alcohol == \"N\", \"Reported not drinking\", \n                                            alcohol))))\n\n\n#Maternal age group\nbirth7 <- birth6 %>%\n  mutate(mage = ifelse(mage == \"999\", NA, mage))\n\nbirth7$M_grp <-cut(as.numeric(birth7$mage),c(12,20,25,30,35,40,65),\n                   include.lowest = T,right=F,\n                   labels = c(\"12-19\",\"20-24\",\"25-29\",\"30-34\",\"35-39\",\"40+\")) \n\n\n#Marital Status\nbirth8 <- birth7 %>%\n  mutate(marital_status = ifelse(marn == \"U\", NA,\n                                 ifelse(marn == \"Y\", \"Married\",\n                                        ifelse(marn == \"N\", \"Unmarried\", marn))))\n\n# #Medicaid eligible\n# birth9 <- birth8 %>%\n#   mutate(eligible = ifelse(medicaid_eligible == \"Y\", \"Medicaid\",\n#              ifelse(medicaid_eligible == \"N\", \"Non-Medicaid\", NA)))\n\n#Medicaid eligible\nbirth9 <- birth8 %>%\n  mutate(eligible = ifelse(pay == \"MEDICAID\" |\n                             wic == \"Y\", \"Medicaid\", \"Non-Medicaid\"))\n\n#chew use during pregnancy\nbirth10 <- birth9 %>%\n  mutate(chewing_use = ifelse(snuff == \"Y\", \"Reported chewing\", \n                              ifelse(snuff == \"N\",\"Reported not chewing\", NA)))\n\n#Tobacco or ETOH during pregnancy\nbirth11 <- birth10 %>%\n  mutate(substance = case_when(\n  smoking_status == \"Reported smoking\" | \n  alcohol_use == \"Reported drinking\" | \n  chewing_use == \"Reported chewing\" ~ \"Yes\",\n  TRUE ~ \"No\"\n))\n\n#Birth Weight\nbirth12 <- birth11 \n\nbirth12$BWT_G <- cut(as.numeric(birth12$bwg),c(0,2500,9000),\n                     include.lowest = T,\n                     right=F,\n                     labels = c(\"<2500g\",\"2500+g\")) \n\n\n#Race\nbirth13 <- birth12 %>%\n  mutate(M_rce = ifelse(mrace_bridged == \"AMERICAN INDIAN/ALASKAN NATIVE\" |\n                          mrace_bridged == \"BRIDGED AMERICAN INDIAN/ALASKAN NATIVE\", \n                        \"Alaska Native/American Indian\", \n                        ifelse(mrace_bridged == \"NATIVE HAWAIIAN\" |\n                                 mrace_bridged == \"VIETNAMESE\" |\n                                 mrace_bridged == \"ASIAN INDIAN\" |\n                                 mrace_bridged == \"BRIDGED ASIAN AND PACIFIC ISLANDER\" |\n                                 mrace_bridged == \"CHINESE\" |\n                                 mrace_bridged == \"JAPANESE\" |\n                                 mrace_bridged == \"SAMOAN\" |\n                                 mrace_bridged == \"FILIPINO\" |\n                                 mrace_bridged == \"KOREAN\" |\n                                 mrace_bridged == \"OTHER ASIAN\", \n                               \"Asian/Pacific Islander\", \n                               ifelse(mrace_bridged == \"BRIDGED WHITE\" |\n                                        mrace_bridged == \"WHITE\" |\n                                        mrace_bridged == \"BRIDGED WHITE\", \n                                      \"White\", \n                                      ifelse(mrace_bridged == \"BLACK\" |\n                                               mrace_bridged == \"BRIDGED BLACK\", \n                                             \"Black\", NA)))))\n\n#Hispanic\nbirth14 <- birth13 %>%\n  mutate(M_eth = ifelse(mhispanic == \"H\", \"Hispanic\",                           # This is \"H\" now (not \"Y\")?\n                        ifelse(mhispanic == \"N\", \"Not Hispanic\", NA)))\n\n\nbirth15 <- birth14 %>%\n  mutate(PH_REGION = ifelse(res_phregn == \"ANCHORAGE REGION\", \"Anchorage\", \n                            ifelse(res_phregn == \"MATANUSKA-SUSITNA REGION\", \n                                   \"Mat-Su\", \n                                   ifelse(res_phregn == \"INTERIOR REGION\", \"Interior\", \n                                          ifelse(res_phregn == \"SOUTHEAST REGION\", \"Southeast\", \n                                                 ifelse(res_phregn == \"NORTHERN REGION\", \"Northern\", \n                                                        ifelse(res_phregn == \"GULF COAST REGION\", \"Gulf Coast\", \n                                                               ifelse(res_phregn == \"SOUTHWEST REGION\", \"Southwest\",\n                                                                      NA)))))))) \n\n\nbirth15b <- birth15 %>%\n  select(birth_cert, sex, eligible, M_rce, M_eth, dob, M_EDU, marital_status, \n         BWT_G, M_grp, smoking_status, DName, res_bhregn, PH_REGION, \n         bplace_city) %>%\n  rename(\"BC\" = birth_cert,\n         \"occurrence_census\" = bplace_city)\n\n\n\nbirth15bb <- birth15 %>%\n  select(birth_cert, sex, fname, mname, lname, mfname, mmname, mlname, mmaidn, \n         ffname, fmname, flname, bplace_fac, dob, mdob, res_city, \n         bplace_city) %>%\n  rename(\"BC\" = birth_cert, \n         \"occurrence_census\" = bplace_city, \n         \"mom_residence_village\" = res_city, \n         \"facility_name\" = bplace_fac, \n         \"dad_last_name\" = flname, \n         \"dad_middle_name\" = fmname,\n         \"dad_first_name\" = ffname, \n         \"mom_first_name\" = mfname,\n         \"mom_middle_name\" = mmname,\n         \"mom_last_name\" = mlname,\n         \"mom_maiden_name\" = mmaidn,\n         \"child_first_name\" = fname,\n         \"child_middle_name\" = mname,\n         \"child_last_name\" = lname)\n```\n\n```{r}\n#| warning: false  \n#| message: false  \n#| echo: false  \n\nres_data_birth <- res_data_2023_birth    # Update data\n\n# Creating date of first screen variable\nres_data_birth_2 <- res_data_birth %>%\n  #distinct(bc, date_and_time_of_first_screen, patients_date_of_birth, ) %>%\n  mutate(date_of_first_screen = date(mdy_hms(date_and_time_of_first_screen))) %>%\n# Creating screening age variable\n  mutate(age_at_first_screen_days = (date_of_first_screen - patients_date_of_birth)) %>%\n  mutate(age_at_first_screen_days = parse_integer(as.character(age_at_first_screen_days))) %>%\n# Creating screen within 1 month boolean\n  mutate(screen_within_30_days = ifelse(age_at_first_screen_days <= 30, 1, 0)) %>%\n  mutate(screen_after_30_days = ifelse(age_at_first_screen_days > 30, 1, 0)) %>%\n# Changing NA values to 0\n  mutate(screen_within_30_days = ifelse(is.na(screen_within_30_days), 0, screen_within_30_days)) %>%\n  mutate(screen_after_30_days = ifelse(is.na(screen_after_30_days), 0, screen_after_30_days)) %>%\n  mutate(first_dx_session_date = date(mdy(first_dx_session_date))) %>%\n# Creating screening age variable\n  mutate(first_dx_session_days = (first_dx_session_date - patients_date_of_birth)) %>%\n  mutate(first_dx_session_days = parse_integer(as.character(first_dx_session_days))) %>%\n# Creating diagnosed within 3 month boolean\n  mutate(diagnosis_within_90_days = ifelse(first_dx_session_days <= 90, 1, 0)) %>%\n# Creating diagnosed beyond 3 month boolean\n    mutate(diagnosis_after_90_days = ifelse(first_dx_session_days > 90, 1, 0)) %>%\n# Creating a \"Not Pass\" boolean indicator variable\n  mutate(screen_not_pass = ifelse(cdc_hearing_outcome == \"Screened - Not Pass\", 1, 0)) %>%\n# Creating an Early intervention within 6-months boolean\n  mutate(date_of_part_c_enrollment = date(mdy(date_of_part_c_enrollment)),\n         date_of_non_part_c_enrollment = date(mdy(date_of_non_part_c_enrollment))) %>%\n  mutate(age_at_ei_part_c_days = (date_of_part_c_enrollment - patients_date_of_birth)) %>%\n  mutate(age_at_ei_part_c_days = as.numeric(parse_integer(as.character(age_at_ei_part_c_days)))) %>%\n  mutate(age_at_ei_part_non_c_days = (date_of_non_part_c_enrollment - patients_date_of_birth)) %>%\n  mutate(age_at_ei_part_non_c_days = parse_integer(as.character(age_at_ei_part_non_c_days))) %>%\n  mutate(ei_before_6m = ifelse(age_at_ei_part_c_days <= 180 \n                               | age_at_ei_part_non_c_days <= 180, 1, 0)) %>%\n# Creating an Early intervention within 6-months boolean \n  mutate(ei_after_6m = ifelse(age_at_ei_part_c_days > 180 \n                               | age_at_ei_part_non_c_days > 180, 1, 0)) %>%\n# Creating a DHH boolean variable\n  mutate(dhh = ifelse(cdc_dx_outcome == \"Diagnosis - Hearing Loss/Deaf/Hard of Hearing\", 1, 0)) %>%\n# Changing NA values to 0\n  mutate(diagnosis_within_90_days = ifelse(is.na(diagnosis_within_90_days), 0, diagnosis_within_90_days)) %>%\n  mutate(ei_before_6m = ifelse(is.na(ei_before_6m), 0, ei_before_6m)) %>%\n# Replacing \"\" with NA\n  mutate(across(where(is.character), ~na_if(., \"\")))\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nscreen_count <- res_data_birth_2 %>%\n  distinct(bc, screen_within_30_days) %>% \n  summarise(count_screen_within_30_days = sum(screen_within_30_days))\n\nscreen_sum <- sum(res_data_birth_2$screen_within_30_days)\nscreen_aft30 <- res_data_birth_2 %>% filter(age_at_first_screen_days > 30) %>% distinct(bc) %>% nrow()\nak_birth_total <- nrow(bvs)\nprct_scrn_1mo <- round((sum(res_data_birth_2$screen_within_30_days)/nrow(bvs))*100, 2)\nprct_scrn_1_aft_1mo <- round((sum(res_data_birth_2$screen_after_30_days)/nrow(bvs))*100, 2)\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Define the previous data points\nprct_scrn_1mo2022 <- 90.4 # 2022 data                  # Update this\n\n\n# Create the table\nscreening_data <- data.frame(\n  year = c(2022, 2023),\n  screening_percent = c(prct_scrn_1mo2022, prct_scrn_1mo)\n)\n\n# Create the trend plot\nggplot(screening_data, aes(x = year, y = screening_percent)) +\n  geom_line(color = \"steelblue\", linewidth = 1.2) +\n  geom_point(color = \"steelblue\", size = 3) +\n  labs(\n    title = \"Percent of Alaskan Newborns Screened Before 1-Month of Age\",\n    subtitle = \"In state Born Screening Rates: 2022-2023\",     #Update\n    x = \"Year\",\n    y = \"Percent Screened (%)\",\n    caption = \"2022 National Screening Rate: 95.6%\"           #Update\n  ) +\n  scale_x_continuous(breaks = c(2022, 2023)) +\n  scale_y_continuous(limits = c(0, (max(screening_data$screening_percent)+5))) + #, breaks = seq(89, 93, 1)) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 12, color = \"gray60\"),\n    axis.title = element_text(size = 11),\n    panel.grid.minor = element_blank()\n  )\n```\n\nCount of newborns screened after 30-days: `r screen_aft30` (`r prct_scrn_1_aft_1mo`%)\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\ndata.frame(\n                                  Year = 2023, \n                                  Screened = screen_count$count_screen_within_30_days,\n                                  Births = ak_birth_total, \n                                  Percent = prct_scrn_1mo) %>%\n  datatable(filter = \"none\", rownames = F,  options = list(dom = 't'), caption = \"Alaska Hearing Screening Within 30-Days\")\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\ndiag_sum <- sum(res_data_birth_2$diagnosis_within_90_days)\ndiag_aftr90 <- res_data_birth_2 %>% filter(first_dx_session_days > 90) %>% distinct(bc) %>% nrow()\nscreen_not_pass_sum <- sum(res_data_birth_2$screen_not_pass)\nprct_diag_3mo <- round((sum(res_data_birth_2$diagnosis_within_90_days)/sum(res_data_birth_2$screen_not_pass))*100, 2)\nprct_diag_aftr3mo <- round((diag_aftr90/sum(res_data_birth_2$screen_not_pass))*100, 2)\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n# Define the previous data points\nprct_diag_3mo2022 <- 16.1 # 2022 data                  # Update this\n\n\n# Create the table\ndiagnosis_data <- data.frame(\n  year = c(2022, 2023),                                # Update this\n  diag_percent = c(prct_diag_3mo2022, \n                        prct_diag_3mo)                 # Update this\n)\n\n# Create the trend plot\nggplot(diagnosis_data, aes(x = year, y = diag_percent)) +\n  geom_line(color = \"steelblue\", linewidth = 1.2) +\n  geom_point(color = \"steelblue\", size = 3) +\n  labs(\n    title = \"Percent of Alaskan Infants Diagnosed Before 3-Months of Age\",\n    subtitle = \"In state Born Diagnosis Rates: 2022-2023\",     #Update\n    x = \"Year\",\n    y = \"Percent Diagnosed (%)\",\n    caption = \"2022 National Diagnosis Rate: 39.9%\"           #Update\n  ) +\n  scale_x_continuous(breaks = c(2022, 2023)) +\n  scale_y_continuous(limits = c(0, (max(diagnosis_data$diag_percent)+5))) +#, breaks = seq(89, 93, 1)) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 12, color = \"gray60\"),\n    axis.title = element_text(size = 11),\n    panel.grid.minor = element_blank()\n  )\n```\n\nCount of infants with a diagnostic evaluation after 60-days: `r diag_aftr90`(`r prct_diag_aftr3mo`%)\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\ndata.frame(\n                                  Year = 2023, \n                                  Evaluated = diag_sum,\n                                  `Failed Screens` = screen_not_pass_sum, \n                                  Percent = prct_diag_3mo) %>%\n  datatable(filter = \"none\", rownames = F,  options = list(dom = 't'), caption = \"Alaska Diagnostic Evaluations Within 90-Days\")\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nenroll_sum <- sum(res_data_birth_2$ei_before_6m)\nenroll_aftr180 <- res_data_birth_2 %>% \n  filter(age_at_ei_part_c_days > 180 |\n           age_at_ei_part_non_c_days > 180) %>% \n  distinct(bc) %>% \n  nrow()\ndhh_sum <- sum(res_data_birth_2$dhh)\nprct_enroll_6mo <- round((sum(res_data_birth_2$ei_before_6m)/sum(res_data_birth_2$dhh))*100, 2)\nprct_enroll_aftr180 <- round((enroll_aftr180/sum(res_data_birth_2$dhh))*100, 2)\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n# Define the previous data points\nprct_enroll_6mo2022 <- 6.3 # 2022 data                  # Update this\n\n\n# Create the table\nenroll_data <- data.frame(\n  year = c(2022, 2023),                                # Update this\n  enroll_percent = c(prct_enroll_6mo2022, \n                        prct_enroll_6mo)                 # Update this\n)\n\n# Create the trend plot\nggplot(enroll_data, aes(x = year, y = enroll_percent)) +\n  geom_line(color = \"steelblue\", linewidth = 1.2) +\n  geom_point(color = \"steelblue\", size = 3) +\n  labs(\n    title = \"Percent of Alaskan Infants Enrolled Before 6-Months of Age\",\n    subtitle = \"In state Born Enrollment Rates: 2022-2023\",     #Update\n    x = \"Year\",\n    y = \"Percent Enrolled (%)\",\n    caption = \"2022 National Enrollment Rate: 40.7%\"           #Update\n  ) +\n  scale_x_continuous(breaks = c(2022, 2023)) +\n  scale_y_continuous(limits = c(0, (max(enroll_data$enroll_percent)+5))) +#, breaks = seq(89, 93, 1)) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 12, color = \"gray60\"),\n    axis.title = element_text(size = 11),\n    panel.grid.minor = element_blank()\n  )\n```\n\nCount of infants diagnosed as DHH enrolled in intervention services after 180-days: `r enroll_aftr180`(`r prct_enroll_aftr180`%)\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\ndata.frame(\n                                  Year = 2023, \n                                  Enrolled = enroll_sum,\n                                  DHH = dhh_sum, \n                                  Percent = prct_enroll_6mo) %>%\n  datatable(filter = \"none\", rownames = F,  options = list(dom = 't'), caption = \"Alaska Enrolled Intervention Within 180-Days\")\n```\n\n## Geographic Distribution\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n# Creating bvs variable vector\nbvs_vec <- birth15 %>% \n  select(bplace, M_grp:PH_REGION) %>% \n  select(-chewing_use) %>% \n  colnames()\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n# Creating a \"lite\" weight res_data_birth_2: res_data_birth_2_lite\nres_data_birth_2_lite <- res_data_birth_2 %>%\n  select(bc, date_of_first_screen:dhh)\n\n# Joining Birth Certificate data with EHDI data\nbirth16 <- birth15 %>%\n  left_join(res_data_birth_2_lite, by = c(\"birth_cert\" = \"bc\")) %>%\n  # Changing NA values to 0\n  mutate(diagnosis_within_90_days = ifelse(is.na(diagnosis_within_90_days), 0, diagnosis_within_90_days)) %>%\n  mutate(ei_before_6m = ifelse(is.na(ei_before_6m), 0, ei_before_6m)) %>%\n  mutate(dhh = ifelse(is.na(dhh), 0, dhh))\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 <- map_dfr(bvs_vec, ~ {\n  # The `across(all_of(.x))` syntax is crucial here. It allows\n  # you to group by a column name that is stored in a variable.\n  # Without this, the code would not work correctly.\n  birth16 %>%\n    group_by(across(all_of(.x))) %>%\n    summarise(\n      percent_scrn_30_days = (sum(screen_within_30_days, na.rm = TRUE)/\n                                n())*100,\n      num = sum(screen_within_30_days, na.rm = TRUE),\n      demon = n(),\n      .groups = \"drop\" # This removes the grouping, which is good practice\n    )  %>%\n    # Add a column to identify the variable used for grouping\n    rename(variable_value = 1) %>% \n    mutate(variable_name = .x) \n})\n\n# Changing NA values in variable_value to \"Unknown\"\nresults_scrn30 <- results_scrn30 %>%\n    mutate(variable_value = ifelse(is.na(variable_value), \n                                   \"Unknown\", variable_value))\n\ntables_scrn30 <- map(bvs_vec, ~ { \n  results_scrn30 %>%\n    filter(variable_name == .x) %>%\n  filter(!is.na(percent_scrn_30_days)) %>%\n    arrange(desc(percent_scrn_30_days)) %>%\n  mutate(percent_scrn_30_days = paste0(round(percent_scrn_30_days, 2), \"%\")) %>%\n    htmlTable::htmlTable(rnames = FALSE)\n})\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n\ngeo_results_scrn30 <- results_scrn30 %>%\n  filter(variable_name == \"PH_REGION\") %>%\n  filter(variable_value != \"Unknown\") %>%\n  mutate(percent_scrn_30_days = round(percent_scrn_30_days, 2))\n\n# Importing ak_sf\nak_sf <- st_read(dsn=\"R:\\\\ABDR\\\\Analysis_New\\\\ABDR_CASECONF\\\\shapefiles\",\n                 layer=\"PHR\",\n                 quiet = TRUE) %>%\n  mutate(XAPHR_LBL = ifelse(XAPHR_LBL == \"Anchorage Municipality\", \"Anchorage\", \n                ifelse(XAPHR_LBL == \"Matanuska-Susitna Borough\",  \"Mat-Su\",XAPHR_LBL)))\n\n # Joining ak_sf to p043_em2b\nak_sf_em <- geo_results_scrn30 %>% \n  left_join(ak_sf, by = c(\"variable_value\" = \"XAPHR_LBL\")) %>%\n        mutate(hover = paste(\"Region:\", variable_value,\n                             \"<br>Screening Rate:\", \n                             percent_scrn_30_days, \"%\",\n                             \"<br>Screened:\", num,\n                             \"<br>Alaskan Born:\", demon))\n\n# Creating a ggplot for ak_sf_em data\nscrn_map <- ggplot(data = ak_sf_em, \n             aes(geometry = geometry, \n                 fill = percent_scrn_30_days,\n                 text = paste(\"Region:\", variable_value,\n                              \"<br>Screening Rate:\", paste0(percent_scrn_30_days, \"%\"),\n                            \"<br>Screened:\", num,\n                            \"<br>Alaskan Born:\", demon))) +\n        geom_sf() +\n  viridis::scale_fill_viridis(option = \"mako\", direction = -1,\n                               begin = 0.2, end = 0.5) +\n      # scale_fill_gradientn(colors = RColorBrewer::brewer.pal(9, \"Blues\")[5:7]) +\n  # viridis::scale_fill_viridis(option = \"viridis\", begin = 0.8, end = 1, direction = 0) +\n        # viridis::scale_fill_viridis(option = \"cividis\", direction = -1) +\n        theme(axis.text.x = element_blank(),\n              axis.text.y = element_blank(),\n              axis.ticks = element_blank(),\n              panel.background = element_rect(fill = \"white\", \n                                              color = \"white\"),\n              legend.position = \"none\") +\n        ggtitle(\"Percent Screened Before 1 Month of Age by Public Health Region\")\n\nscrn_map_ly <- ggplotly(scrn_map, \n         tooltip = c(\"text\", \"size\")) %>%  \n  layout(xaxis = list(autorange = TRUE),\n         yaxis = list(autorange = TRUE))\nscrn_map_ly\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 <- map_dfr(bvs_vec, ~ {\n  # The `across(all_of(.x))` syntax is crucial here. It allows\n  # you to group by a column name that is stored in a variable.\n  # Without this, the code would not work correctly.\n  birth16 %>%\n    group_by(across(all_of(.x))) %>%\n    summarise(\n      percent_scrn_30_days = (sum(screen_within_30_days, na.rm = TRUE)/\n                                n())*100,\n      num = sum(screen_within_30_days, na.rm = TRUE),\n      demon = n(),\n      .groups = \"drop\" # This removes the grouping, which is good practice\n    )  %>%\n    # Add a column to identify the variable used for grouping\n    rename(variable_value = 1) %>% \n    mutate(variable_name = .x) \n})\n\n# Changing NA values in variable_value to \"Unknown\"\nresults_scrn30 <- results_scrn30 %>%\n    mutate(variable_value = ifelse(is.na(variable_value), \n                                   \"Unknown\", variable_value))\n\ntables_scrn30 <- map(bvs_vec, ~ { \n  results_scrn30 %>%\n    filter(variable_name == .x) %>%\n  filter(!is.na(percent_scrn_30_days)) %>%\n    arrange(desc(percent_scrn_30_days)) %>%\n  mutate(percent_scrn_30_days = paste0(round(percent_scrn_30_days, 2), \"%\")) %>%\n    htmlTable::htmlTable(rnames = FALSE)\n})\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 %>% \n  filter(variable_name == 'PH_REGION') %>% \n  select(-variable_name) %>%\n  mutate(percent_scrn_30_days = round(percent_scrn_30_days, 2)) %>%\ndatatable(, \n          #container = tables_scrn30[[9]], \n          options = list(pageLength = nrow(results_scrn30),\n                        dom = 't',\n                        initComplete = JS(\n                          \"function(settings, json) {\",\n                          \"$('.dataTables_wrapper tfoot').css({'text-align': 'left', 'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper tfoot td').css({'padding-left': '0', 'margin-left': '0', 'text-align': 'left'});\",\n                          \"$('.dataTables_wrapper tfoot tr').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('tfoot').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper thead th').css('text-align', 'left');\",\n                          \"}\"\n                        )),\n          rownames = F, \n          colnames = c(\"Region\", \"Screened Percent\", \"Screened Count\", \"AK Births\"))\n```\n\n## Demographic Variables\n\n## Place of Birth\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 %>% \n  filter(variable_name == 'bplace') %>% \n  select(-variable_name) %>%\n  mutate(percent_scrn_30_days = round(percent_scrn_30_days, 2)) %>%\ndatatable(, \n          #container = tables_scrn30[[9]], \n          options = list(pageLength = nrow(results_scrn30),\n                        dom = 't',\n                        initComplete = JS(\n                          \"function(settings, json) {\",\n                          \"$('.dataTables_wrapper tfoot').css({'text-align': 'left', 'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper tfoot td').css({'padding-left': '0', 'margin-left': '0', 'text-align': 'left'});\",\n                          \"$('.dataTables_wrapper tfoot tr').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('tfoot').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper thead th').css('text-align', 'left');\",\n                          \"}\"\n                        )),\n          rownames = F, \n          colnames = c(\"Place of Birth\", \"Screened Percent\", \"Screened Count\", \"AK Births\")#, caption = \"Place of Birth\"\n          )\n```\n\n## Medicaid Status\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 %>% \n  filter(variable_name == 'eligible') %>% \n  select(-variable_name) %>%\n  mutate(percent_scrn_30_days = round(percent_scrn_30_days, 2)) %>%\ndatatable(, \n          #container = tables_scrn30[[9]], \n          options = list(pageLength = nrow(results_scrn30),\n                        dom = 't',\n                        initComplete = JS(\n                          \"function(settings, json) {\",\n                          \"$('.dataTables_wrapper tfoot').css({'text-align': 'left', 'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper tfoot td').css({'padding-left': '0', 'margin-left': '0', 'text-align': 'left'});\",\n                          \"$('.dataTables_wrapper tfoot tr').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('tfoot').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper thead th').css('text-align', 'left');\",\n                          \"}\"\n                        )),\n          rownames = F, \n          colnames = c(\"Medicaid Status\", \"Screened Percent\", \"Screened Count\", \"AK Births\")\n          )\n```\n\n## Maternal Age\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 %>% \n  filter(variable_name == 'M_grp') %>% \n  select(-variable_name) %>%\n  mutate(percent_scrn_30_days = round(percent_scrn_30_days, 2)) %>%\ndatatable(, \n          #container = tables_scrn30[[9]], \n          options = list(pageLength = nrow(results_scrn30),\n                        dom = 't',\n                        initComplete = JS(\n                          \"function(settings, json) {\",\n                          \"$('.dataTables_wrapper tfoot').css({'text-align': 'left', 'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper tfoot td').css({'padding-left': '0', 'margin-left': '0', 'text-align': 'left'});\",\n                          \"$('.dataTables_wrapper tfoot tr').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('tfoot').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper thead th').css('text-align', 'left');\",\n                          \"}\"\n                        )),\n          rownames = F, \n          colnames = c(\"Maternal Age Group\", \"Screened Percent\", \"Screened Count\", \"AK Births\")\n          )\n```\n\n## Maternal Race\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 %>% \n  filter(variable_name == 'M_rce') %>% \n  select(-variable_name) %>%\n  mutate(percent_scrn_30_days = round(percent_scrn_30_days, 2)) %>%\ndatatable(, \n          #container = tables_scrn30[[9]], \n          options = list(pageLength = nrow(results_scrn30),\n                        dom = 't',\n                        initComplete = JS(\n                          \"function(settings, json) {\",\n                          \"$('.dataTables_wrapper tfoot').css({'text-align': 'left', 'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper tfoot td').css({'padding-left': '0', 'margin-left': '0', 'text-align': 'left'});\",\n                          \"$('.dataTables_wrapper tfoot tr').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('tfoot').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper thead th').css('text-align', 'left');\",\n                          \"}\"\n                        )),\n          rownames = F, \n          colnames = c(\"Maternal Race\", \"Screened Percent\", \"Screened Count\", \"AK Births\")\n          )\n```\n\n## Marital Status\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 %>% \n  filter(variable_name == 'marital_status') %>% \n  select(-variable_name) %>%\n  mutate(percent_scrn_30_days = round(percent_scrn_30_days, 2)) %>%\ndatatable(, \n          #container = tables_scrn30[[9]], \n          options = list(pageLength = nrow(results_scrn30),\n                        dom = 't',\n                        initComplete = JS(\n                          \"function(settings, json) {\",\n                          \"$('.dataTables_wrapper tfoot').css({'text-align': 'left', 'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper tfoot td').css({'padding-left': '0', 'margin-left': '0', 'text-align': 'left'});\",\n                          \"$('.dataTables_wrapper tfoot tr').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('tfoot').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper thead th').css('text-align', 'left');\",\n                          \"}\"\n                        )),\n          rownames = F, \n          colnames = c(\"Marital Status\", \"Screened Percent\", \"Screened Count\", \"AK Births\")\n          )\n```\n\n## Any Substance Use\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 %>% \n  filter(variable_name == 'substance') %>% \n  select(-variable_name) %>%\n  mutate(percent_scrn_30_days = round(percent_scrn_30_days, 2)) %>%\ndatatable(, \n          #container = tables_scrn30[[9]], \n          options = list(pageLength = nrow(results_scrn30),\n                        dom = 't',\n                        initComplete = JS(\n                          \"function(settings, json) {\",\n                          \"$('.dataTables_wrapper tfoot').css({'text-align': 'left', 'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper tfoot td').css({'padding-left': '0', 'margin-left': '0', 'text-align': 'left'});\",\n                          \"$('.dataTables_wrapper tfoot tr').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('tfoot').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper thead th').css('text-align', 'left');\",\n                          \"}\"\n                        )),\n          rownames = F, \n          colnames = c(\"Substance Use\", \"Screened Percent\", \"Screened Count\", \"AK Births\")\n          )\n```\n\n## Prevalence Estimate of DHH in Alaska\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n# Creating hearing data dataframe\noutcome_cat <- res_data_birth_2 %>% \n  filter(screen_not_pass == 1) %>%\n  group_by(cdc_dx_outcome) %>%\n  summarise(Total = n()) %>%\n  filter(!is.na(cdc_dx_outcome)) %>%\n  select(cdc_dx_outcome)\n\n\noutcome_count <- res_data_birth_2 %>% \n   filter(screen_not_pass == 1) %>%\n  group_by(cdc_dx_outcome) %>%\n  summarise(Count = n()) %>%\n  filter(!is.na(cdc_dx_outcome)) %>%\n  select(Count)\n\nhearing_data <- data.frame(\n  Category = c(outcome_cat), \n  Count = c(outcome_count)\n)\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n\n# Create shorter labels for better visualization\nhearing_data <- hearing_data %>%\n  rename(\"Category\" = cdc_dx_outcome) %>%\n  mutate(\n    Short_Label = case_when(\n      Category == \"Diagnosis - Hearing Loss/Deaf/Hard of Hearing\" ~ \"Hearing Loss/Deaf/HoH\",\n      Category == \"Diagnosis - No Hearing Loss\" ~ \"No Hearing Loss\",\n      Category == \"Diagnosis - Transient Hearing Loss\" ~ \"Transient Hearing Loss\",\n      Category == \"No Diagnosis - Audiologic Diagnosis in Process (Awaiting Diagnosis)\" ~ \"Awaiting Diagnosis\",\n      Category == \"No Diagnosis - Infant Died\" ~ \"Infant Died\",\n      Category == \"No Diagnosis - Moved out of Jurisdiction\" ~ \"Moved out of Jurisdiction\",\n      Category == \"No Diagnosis - Non-Resident\" ~ \"Non-Resident\",\n      Category == \"No Diagnosis - Parents/Family Contacted but Unresponsive\" ~ \"Family Unresponsive\",\n      Category == \"No Diagnosis - Parents/Family Declined Services\" ~ \"Family Declined Services\",\n      Category == \"No Diagnosis - Unable to Contact\" ~ \"Unable to Contact\",\n      Category == \"No Diagnosis - Unable to Receive Diagnostic Testing due to Medical Reasons\" ~ \"Medical Reasons\",\n      Category == \"No Diagnosis - Unknown\" ~ \"Unknown\",\n      TRUE ~ \"Other\"  # catch-all for any unmatched categories\n    )\n  )\n\n# Calculate percentages\nhearing_data <- hearing_data %>%\n  mutate(\n    Percentage = round(Count / sum(Count) * 100, 1),\n    Label = paste0(Short_Label, \"\\n\", Count, \" (\", Percentage, \"%)\")\n  )\n\n# Create color palette - using distinct colors for better differentiation\ncolors <- c(\"#FF6B6B\", \"#4ECDC4\", \"#45B7D1\", \"#96CEB4\", \"#FFEAA7\", \n           \"#DDA0DD\", \"#98D8C8\", \"#F7DC6F\", \"#BB8FCE\", \"#85C1E9\",\n           \"#F8C471\", \"#CD6155\")\n\n# Create the doughnut plot\np <- ggplot(hearing_data, aes(x = 2, y = Count, fill = Short_Label)) +\n  geom_bar(stat = \"identity\", width = 1, color = \"white\", size = 0.5) +\n  coord_polar(theta = \"y\", start = 0) +\n  xlim(0.5, 2.5) +  # This creates the hole in the middle\n  scale_fill_manual(values = colors) +\n  theme_void() +\n  theme(\n    legend.position = \"right\",\n    legend.title = element_blank(),\n    legend.text = element_text(size = 9),\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5, size = 11, color = \"gray60\")\n  ) +\n  labs(\n    title = \"Distribution of Hearing Evaluation Outcomes\",\n    subtitle = paste(\"Total Cases:\", sum(hearing_data$Count), \"newborns with a failed hearing screen\")\n  )\n\n# Display the plot\nprint(p)\n\n# # Print summary statistics\n# cat(\"\\nSummary Statistics:\\n\")\n# cat(\"==================\\n\")\n# cat(\"Total cases:\", sum(hearing_data$Count), \"\\n\")\n# cat(\"Number of categories:\", nrow(hearing_data), \"\\n\")\n# cat(\"\\nTop 3 categories by count:\\n\")\n# top3 <- hearing_data[order(-hearing_data$Count), ][1:3, ]\n# for(i in 1:3) {\n#   cat(paste0(i, \". \", top3$Short_Label[i], \": \", top3$Count[i], \n#              \" (\", top3$Percentage[i], \"%)\\n\"))\n#}\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n\nhearing_data %>%\n  select(Short_Label, Count, Percentage) %>%\n  datatable(data = ., rownames = FALSE)\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n\nhearing_data2 <- hearing_data %>%\n  select(Short_Label, Count, Percentage) %>%\n  mutate(screen_result = ifelse(\n    Short_Label == \"Hearing Loss/Deaf/HoH\" |\n      Short_Label == \"No Hearing Loss\" |\n        Short_Label == \"Transient Hearing Loss\",\n    \"Known\", \"Unknown\"\n    ))\n\n\nTotal <- hearing_data %>% \n  summarize(total_n = sum(Count)) %>%\n  pull(total_n)\n\ndeaf <- hearing_data %>% \n  filter(Short_Label == \"Hearing Loss/Deaf/HoH\") %>%\n  pull(Count)\n\nnot_deaf <- hearing_data %>% \n  filter(Short_Label %in% c(\"No Hearing Loss\", \"Transient Hearing Loss\")) %>%\n  summarise(not_deaf_count = sum(Count)) %>%\n  pull(not_deaf_count)\n\nscreen_results <- deaf + not_deaf\n\ndeaf_to_screen_rate <- round((deaf/screen_results)*100, 2)\n\nscreen_no_results <- hearing_data2 %>%\n  filter(screen_result == \"Unknown\") %>%\n  summarise(screen_no_results_n = sum(Count)) %>%\n  pull(screen_no_results_n)\n\nestimated_screen_results <- screen_no_results*(deaf_to_screen_rate/100)\n\n# Calculating any diagnosed dhh that were not screened\nno_screen_dhh <- res_data_birth_2 %>% \n  filter(screen_not_pass == 0) %>%\n  filter(cdc_dx_outcome == \"Diagnosis - Hearing Loss/Deaf/Hard of Hearing\") %>%\n  summarise(Total = n()) %>%\n  pull(Total)\n  \n\ntotal_dhh <- deaf + \n  estimated_screen_results + \n  no_screen_dhh\n\nak_dhh10000 <- round(total_dhh/nrow(bvs)*10000, 2)\n  \n```\n\n## Deaf or Hard of Hearing Prevalence\n\nOut of the `r Total` newborns with a failed hearing screen, only `r screen_results` have a known hearing evaluation. The number of infants diagnosed as DHH after failing a hearing screen is `r deaf` (out of `r screen_results` with a hearing evaluation). The proportion of DHH among screened infants is `r paste0(deaf_to_screen_rate, \"%\")` `r deaf` / `r screen_results`. The number of infants with a failed hearing screen that do not have a diagnosis is `r screen_no_results`. The number of DHH without a documented hearing screen is `r no_screen_dhh`\n\nAssuming a consistent rate of DHH among screened newborns, the prevalence estimate for DHH for the year is `r ak_dhh10000` per 10,000 live Alaskan births.\n","srcMarkdownNoYaml":"\n\n## EHDI Variables\n\nFrom [CDC.com](https://www.cdc.gov/hearing-loss-children/data/ehdi-data.html) Formulas for Receipt of EHDI Services\n\n![Timely EHDI surveillance Measurement](https://www.cdc.gov/hearing-loss-children/media/images/2024/08/349109-A_WEB_EHDI-Infographic_7.jpg)\n\n## EHDI Metrics\n\n### **Hearing Screening (By 1-month)**\n\nCDC Definition\n\n**% Screened** = (# Total Screened / \\# Total Occurrent Births according to EHDI program) x 100\n\nOZ Variables\n\n-   By 30 Days Old - Hearing Screen\n-   date_and_time_of_first_screen + patients_date_of_birth\n-   2023 birth certificate births\n-   cdc_hearing_outcome\n\n### **Diagnostic Evaluation**\n\nCDC Definition\n\n**% Diagnosed** = (# Total Diagnosed / \\# Total Not Pass) x 100\n\nOZ Variables\n\n-   By 90 Days Old - Diagnose as deaf or hard of hearing (DHH)\n-   first_dx_session_date + patients_date_of_birth\n-   cdc_hearing_outcome\n\n### **Intervention Enrollment**\n\nCDC Definition\n\n**% EI Enrollment** = (# Total Enrolled in EI (Part C and Non-Part C) / \\# Total Infants who are DHH) x 100\n\nOZ Variables\n\n-   By 180 Days old - Enroll in early intervention\n-   date_of_part_c_enrollment - patients_date_of_birth\n-   date_of_non_part_c_enrollment - patients_date_of_birth\n-   cdc_dx_outcome\n\n```{r}\n#| warning: false  \n#| message: false  \n#| echo: false  \n\nlibrary(tidyverse)         # contains packages like dplyr\nlibrary(lubridate)         # works with modifying dates easily\nlibrary(janitor) \nlibrary(sf) \nlibrary(viridis) \nlibrary(plotly) \nlibrary(purrr) \nlibrary(DT)  \n\nload(\"//hssancconf/DPH-WCFH_Restricted/Newborn/NBHS/2023 Data/research_dataframe2023.Rda\")\n```\n\n```{r}\n#| warning: false  \n#| message: false  #\n#| echo: false  \n\n# // Load in HAVRS Year-To-Date file // # \n\nfp_vs <- file.path(\"R:\\\\ResData\\\\BVS MASTER FILES\\\\AUTHORIZED RESEARCHERS ONLY\\\\current\\\\birth_statistical.sas7bdat\") \n\nbvs <- haven::read_sas(fp_vs) %>%    filter(dob_yr == \"2023\",           bplace_state == \"ALASKA\") %>%                   # Update Year\n  mutate_all(.funs = as.character) %>% # converting all column to character\n  mutate(dob = ymd(dob))\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n# Recoding birthcertificate variables\n# Sex\nbirth2 <- bvs %>%\n  mutate(sex = ifelse(sex == \"N\", NA, sex)) %>%\n  mutate(sex = ifelse(sex == \"M\", \"Male\", \n                      ifelse(sex == \"F\", \"Female\", sex)))\n\n# Dad last name on BC\nbirth3 <- birth2 %>%\n  mutate(flname = ifelse(is.na(flname), \"\", flname)) %>%\n  mutate(DName = ifelse(flname == \"\", \"None\", \"Present\"))\n\n\n#Smoking use during pregnancy\nbirth4 <- birth3 %>%\n  mutate(smoking_status = ifelse(tobac == \"Y\", \"Reported smoking\", \n                                 ifelse(tobac == \"N\", \"Reported not smoking\", \n                                        ifelse(tobac == \"U\", NA, tobac))))\n\n#Maternal education\nbirth5 <- birth4 %>%\n  mutate(M_EDU = ifelse(meduc_code_brg == 2, \"12 years\",\n                        ifelse(meduc_code_brg == 1, \"<12 years\",\n                               ifelse(meduc_code_brg == 3, \"+12 years\", NA))))\n\n\n#Alcohol use during pregnancy\nbirth6 <- birth5 %>%\n  mutate(alcohol_use = ifelse(alcohol == \"U\", NA, \n                              ifelse(alcohol == \"Y\", \"Reported drinking\", \n                                     ifelse(alcohol == \"N\", \"Reported not drinking\", \n                                            alcohol))))\n\n\n#Maternal age group\nbirth7 <- birth6 %>%\n  mutate(mage = ifelse(mage == \"999\", NA, mage))\n\nbirth7$M_grp <-cut(as.numeric(birth7$mage),c(12,20,25,30,35,40,65),\n                   include.lowest = T,right=F,\n                   labels = c(\"12-19\",\"20-24\",\"25-29\",\"30-34\",\"35-39\",\"40+\")) \n\n\n#Marital Status\nbirth8 <- birth7 %>%\n  mutate(marital_status = ifelse(marn == \"U\", NA,\n                                 ifelse(marn == \"Y\", \"Married\",\n                                        ifelse(marn == \"N\", \"Unmarried\", marn))))\n\n# #Medicaid eligible\n# birth9 <- birth8 %>%\n#   mutate(eligible = ifelse(medicaid_eligible == \"Y\", \"Medicaid\",\n#              ifelse(medicaid_eligible == \"N\", \"Non-Medicaid\", NA)))\n\n#Medicaid eligible\nbirth9 <- birth8 %>%\n  mutate(eligible = ifelse(pay == \"MEDICAID\" |\n                             wic == \"Y\", \"Medicaid\", \"Non-Medicaid\"))\n\n#chew use during pregnancy\nbirth10 <- birth9 %>%\n  mutate(chewing_use = ifelse(snuff == \"Y\", \"Reported chewing\", \n                              ifelse(snuff == \"N\",\"Reported not chewing\", NA)))\n\n#Tobacco or ETOH during pregnancy\nbirth11 <- birth10 %>%\n  mutate(substance = case_when(\n  smoking_status == \"Reported smoking\" | \n  alcohol_use == \"Reported drinking\" | \n  chewing_use == \"Reported chewing\" ~ \"Yes\",\n  TRUE ~ \"No\"\n))\n\n#Birth Weight\nbirth12 <- birth11 \n\nbirth12$BWT_G <- cut(as.numeric(birth12$bwg),c(0,2500,9000),\n                     include.lowest = T,\n                     right=F,\n                     labels = c(\"<2500g\",\"2500+g\")) \n\n\n#Race\nbirth13 <- birth12 %>%\n  mutate(M_rce = ifelse(mrace_bridged == \"AMERICAN INDIAN/ALASKAN NATIVE\" |\n                          mrace_bridged == \"BRIDGED AMERICAN INDIAN/ALASKAN NATIVE\", \n                        \"Alaska Native/American Indian\", \n                        ifelse(mrace_bridged == \"NATIVE HAWAIIAN\" |\n                                 mrace_bridged == \"VIETNAMESE\" |\n                                 mrace_bridged == \"ASIAN INDIAN\" |\n                                 mrace_bridged == \"BRIDGED ASIAN AND PACIFIC ISLANDER\" |\n                                 mrace_bridged == \"CHINESE\" |\n                                 mrace_bridged == \"JAPANESE\" |\n                                 mrace_bridged == \"SAMOAN\" |\n                                 mrace_bridged == \"FILIPINO\" |\n                                 mrace_bridged == \"KOREAN\" |\n                                 mrace_bridged == \"OTHER ASIAN\", \n                               \"Asian/Pacific Islander\", \n                               ifelse(mrace_bridged == \"BRIDGED WHITE\" |\n                                        mrace_bridged == \"WHITE\" |\n                                        mrace_bridged == \"BRIDGED WHITE\", \n                                      \"White\", \n                                      ifelse(mrace_bridged == \"BLACK\" |\n                                               mrace_bridged == \"BRIDGED BLACK\", \n                                             \"Black\", NA)))))\n\n#Hispanic\nbirth14 <- birth13 %>%\n  mutate(M_eth = ifelse(mhispanic == \"H\", \"Hispanic\",                           # This is \"H\" now (not \"Y\")?\n                        ifelse(mhispanic == \"N\", \"Not Hispanic\", NA)))\n\n\nbirth15 <- birth14 %>%\n  mutate(PH_REGION = ifelse(res_phregn == \"ANCHORAGE REGION\", \"Anchorage\", \n                            ifelse(res_phregn == \"MATANUSKA-SUSITNA REGION\", \n                                   \"Mat-Su\", \n                                   ifelse(res_phregn == \"INTERIOR REGION\", \"Interior\", \n                                          ifelse(res_phregn == \"SOUTHEAST REGION\", \"Southeast\", \n                                                 ifelse(res_phregn == \"NORTHERN REGION\", \"Northern\", \n                                                        ifelse(res_phregn == \"GULF COAST REGION\", \"Gulf Coast\", \n                                                               ifelse(res_phregn == \"SOUTHWEST REGION\", \"Southwest\",\n                                                                      NA)))))))) \n\n\nbirth15b <- birth15 %>%\n  select(birth_cert, sex, eligible, M_rce, M_eth, dob, M_EDU, marital_status, \n         BWT_G, M_grp, smoking_status, DName, res_bhregn, PH_REGION, \n         bplace_city) %>%\n  rename(\"BC\" = birth_cert,\n         \"occurrence_census\" = bplace_city)\n\n\n\nbirth15bb <- birth15 %>%\n  select(birth_cert, sex, fname, mname, lname, mfname, mmname, mlname, mmaidn, \n         ffname, fmname, flname, bplace_fac, dob, mdob, res_city, \n         bplace_city) %>%\n  rename(\"BC\" = birth_cert, \n         \"occurrence_census\" = bplace_city, \n         \"mom_residence_village\" = res_city, \n         \"facility_name\" = bplace_fac, \n         \"dad_last_name\" = flname, \n         \"dad_middle_name\" = fmname,\n         \"dad_first_name\" = ffname, \n         \"mom_first_name\" = mfname,\n         \"mom_middle_name\" = mmname,\n         \"mom_last_name\" = mlname,\n         \"mom_maiden_name\" = mmaidn,\n         \"child_first_name\" = fname,\n         \"child_middle_name\" = mname,\n         \"child_last_name\" = lname)\n```\n\n```{r}\n#| warning: false  \n#| message: false  \n#| echo: false  \n\nres_data_birth <- res_data_2023_birth    # Update data\n\n# Creating date of first screen variable\nres_data_birth_2 <- res_data_birth %>%\n  #distinct(bc, date_and_time_of_first_screen, patients_date_of_birth, ) %>%\n  mutate(date_of_first_screen = date(mdy_hms(date_and_time_of_first_screen))) %>%\n# Creating screening age variable\n  mutate(age_at_first_screen_days = (date_of_first_screen - patients_date_of_birth)) %>%\n  mutate(age_at_first_screen_days = parse_integer(as.character(age_at_first_screen_days))) %>%\n# Creating screen within 1 month boolean\n  mutate(screen_within_30_days = ifelse(age_at_first_screen_days <= 30, 1, 0)) %>%\n  mutate(screen_after_30_days = ifelse(age_at_first_screen_days > 30, 1, 0)) %>%\n# Changing NA values to 0\n  mutate(screen_within_30_days = ifelse(is.na(screen_within_30_days), 0, screen_within_30_days)) %>%\n  mutate(screen_after_30_days = ifelse(is.na(screen_after_30_days), 0, screen_after_30_days)) %>%\n  mutate(first_dx_session_date = date(mdy(first_dx_session_date))) %>%\n# Creating screening age variable\n  mutate(first_dx_session_days = (first_dx_session_date - patients_date_of_birth)) %>%\n  mutate(first_dx_session_days = parse_integer(as.character(first_dx_session_days))) %>%\n# Creating diagnosed within 3 month boolean\n  mutate(diagnosis_within_90_days = ifelse(first_dx_session_days <= 90, 1, 0)) %>%\n# Creating diagnosed beyond 3 month boolean\n    mutate(diagnosis_after_90_days = ifelse(first_dx_session_days > 90, 1, 0)) %>%\n# Creating a \"Not Pass\" boolean indicator variable\n  mutate(screen_not_pass = ifelse(cdc_hearing_outcome == \"Screened - Not Pass\", 1, 0)) %>%\n# Creating an Early intervention within 6-months boolean\n  mutate(date_of_part_c_enrollment = date(mdy(date_of_part_c_enrollment)),\n         date_of_non_part_c_enrollment = date(mdy(date_of_non_part_c_enrollment))) %>%\n  mutate(age_at_ei_part_c_days = (date_of_part_c_enrollment - patients_date_of_birth)) %>%\n  mutate(age_at_ei_part_c_days = as.numeric(parse_integer(as.character(age_at_ei_part_c_days)))) %>%\n  mutate(age_at_ei_part_non_c_days = (date_of_non_part_c_enrollment - patients_date_of_birth)) %>%\n  mutate(age_at_ei_part_non_c_days = parse_integer(as.character(age_at_ei_part_non_c_days))) %>%\n  mutate(ei_before_6m = ifelse(age_at_ei_part_c_days <= 180 \n                               | age_at_ei_part_non_c_days <= 180, 1, 0)) %>%\n# Creating an Early intervention within 6-months boolean \n  mutate(ei_after_6m = ifelse(age_at_ei_part_c_days > 180 \n                               | age_at_ei_part_non_c_days > 180, 1, 0)) %>%\n# Creating a DHH boolean variable\n  mutate(dhh = ifelse(cdc_dx_outcome == \"Diagnosis - Hearing Loss/Deaf/Hard of Hearing\", 1, 0)) %>%\n# Changing NA values to 0\n  mutate(diagnosis_within_90_days = ifelse(is.na(diagnosis_within_90_days), 0, diagnosis_within_90_days)) %>%\n  mutate(ei_before_6m = ifelse(is.na(ei_before_6m), 0, ei_before_6m)) %>%\n# Replacing \"\" with NA\n  mutate(across(where(is.character), ~na_if(., \"\")))\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nscreen_count <- res_data_birth_2 %>%\n  distinct(bc, screen_within_30_days) %>% \n  summarise(count_screen_within_30_days = sum(screen_within_30_days))\n\nscreen_sum <- sum(res_data_birth_2$screen_within_30_days)\nscreen_aft30 <- res_data_birth_2 %>% filter(age_at_first_screen_days > 30) %>% distinct(bc) %>% nrow()\nak_birth_total <- nrow(bvs)\nprct_scrn_1mo <- round((sum(res_data_birth_2$screen_within_30_days)/nrow(bvs))*100, 2)\nprct_scrn_1_aft_1mo <- round((sum(res_data_birth_2$screen_after_30_days)/nrow(bvs))*100, 2)\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Define the previous data points\nprct_scrn_1mo2022 <- 90.4 # 2022 data                  # Update this\n\n\n# Create the table\nscreening_data <- data.frame(\n  year = c(2022, 2023),\n  screening_percent = c(prct_scrn_1mo2022, prct_scrn_1mo)\n)\n\n# Create the trend plot\nggplot(screening_data, aes(x = year, y = screening_percent)) +\n  geom_line(color = \"steelblue\", linewidth = 1.2) +\n  geom_point(color = \"steelblue\", size = 3) +\n  labs(\n    title = \"Percent of Alaskan Newborns Screened Before 1-Month of Age\",\n    subtitle = \"In state Born Screening Rates: 2022-2023\",     #Update\n    x = \"Year\",\n    y = \"Percent Screened (%)\",\n    caption = \"2022 National Screening Rate: 95.6%\"           #Update\n  ) +\n  scale_x_continuous(breaks = c(2022, 2023)) +\n  scale_y_continuous(limits = c(0, (max(screening_data$screening_percent)+5))) + #, breaks = seq(89, 93, 1)) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 12, color = \"gray60\"),\n    axis.title = element_text(size = 11),\n    panel.grid.minor = element_blank()\n  )\n```\n\nCount of newborns screened after 30-days: `r screen_aft30` (`r prct_scrn_1_aft_1mo`%)\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\ndata.frame(\n                                  Year = 2023, \n                                  Screened = screen_count$count_screen_within_30_days,\n                                  Births = ak_birth_total, \n                                  Percent = prct_scrn_1mo) %>%\n  datatable(filter = \"none\", rownames = F,  options = list(dom = 't'), caption = \"Alaska Hearing Screening Within 30-Days\")\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\ndiag_sum <- sum(res_data_birth_2$diagnosis_within_90_days)\ndiag_aftr90 <- res_data_birth_2 %>% filter(first_dx_session_days > 90) %>% distinct(bc) %>% nrow()\nscreen_not_pass_sum <- sum(res_data_birth_2$screen_not_pass)\nprct_diag_3mo <- round((sum(res_data_birth_2$diagnosis_within_90_days)/sum(res_data_birth_2$screen_not_pass))*100, 2)\nprct_diag_aftr3mo <- round((diag_aftr90/sum(res_data_birth_2$screen_not_pass))*100, 2)\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n# Define the previous data points\nprct_diag_3mo2022 <- 16.1 # 2022 data                  # Update this\n\n\n# Create the table\ndiagnosis_data <- data.frame(\n  year = c(2022, 2023),                                # Update this\n  diag_percent = c(prct_diag_3mo2022, \n                        prct_diag_3mo)                 # Update this\n)\n\n# Create the trend plot\nggplot(diagnosis_data, aes(x = year, y = diag_percent)) +\n  geom_line(color = \"steelblue\", linewidth = 1.2) +\n  geom_point(color = \"steelblue\", size = 3) +\n  labs(\n    title = \"Percent of Alaskan Infants Diagnosed Before 3-Months of Age\",\n    subtitle = \"In state Born Diagnosis Rates: 2022-2023\",     #Update\n    x = \"Year\",\n    y = \"Percent Diagnosed (%)\",\n    caption = \"2022 National Diagnosis Rate: 39.9%\"           #Update\n  ) +\n  scale_x_continuous(breaks = c(2022, 2023)) +\n  scale_y_continuous(limits = c(0, (max(diagnosis_data$diag_percent)+5))) +#, breaks = seq(89, 93, 1)) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 12, color = \"gray60\"),\n    axis.title = element_text(size = 11),\n    panel.grid.minor = element_blank()\n  )\n```\n\nCount of infants with a diagnostic evaluation after 60-days: `r diag_aftr90`(`r prct_diag_aftr3mo`%)\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\ndata.frame(\n                                  Year = 2023, \n                                  Evaluated = diag_sum,\n                                  `Failed Screens` = screen_not_pass_sum, \n                                  Percent = prct_diag_3mo) %>%\n  datatable(filter = \"none\", rownames = F,  options = list(dom = 't'), caption = \"Alaska Diagnostic Evaluations Within 90-Days\")\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nenroll_sum <- sum(res_data_birth_2$ei_before_6m)\nenroll_aftr180 <- res_data_birth_2 %>% \n  filter(age_at_ei_part_c_days > 180 |\n           age_at_ei_part_non_c_days > 180) %>% \n  distinct(bc) %>% \n  nrow()\ndhh_sum <- sum(res_data_birth_2$dhh)\nprct_enroll_6mo <- round((sum(res_data_birth_2$ei_before_6m)/sum(res_data_birth_2$dhh))*100, 2)\nprct_enroll_aftr180 <- round((enroll_aftr180/sum(res_data_birth_2$dhh))*100, 2)\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n# Define the previous data points\nprct_enroll_6mo2022 <- 6.3 # 2022 data                  # Update this\n\n\n# Create the table\nenroll_data <- data.frame(\n  year = c(2022, 2023),                                # Update this\n  enroll_percent = c(prct_enroll_6mo2022, \n                        prct_enroll_6mo)                 # Update this\n)\n\n# Create the trend plot\nggplot(enroll_data, aes(x = year, y = enroll_percent)) +\n  geom_line(color = \"steelblue\", linewidth = 1.2) +\n  geom_point(color = \"steelblue\", size = 3) +\n  labs(\n    title = \"Percent of Alaskan Infants Enrolled Before 6-Months of Age\",\n    subtitle = \"In state Born Enrollment Rates: 2022-2023\",     #Update\n    x = \"Year\",\n    y = \"Percent Enrolled (%)\",\n    caption = \"2022 National Enrollment Rate: 40.7%\"           #Update\n  ) +\n  scale_x_continuous(breaks = c(2022, 2023)) +\n  scale_y_continuous(limits = c(0, (max(enroll_data$enroll_percent)+5))) +#, breaks = seq(89, 93, 1)) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 12, color = \"gray60\"),\n    axis.title = element_text(size = 11),\n    panel.grid.minor = element_blank()\n  )\n```\n\nCount of infants diagnosed as DHH enrolled in intervention services after 180-days: `r enroll_aftr180`(`r prct_enroll_aftr180`%)\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\ndata.frame(\n                                  Year = 2023, \n                                  Enrolled = enroll_sum,\n                                  DHH = dhh_sum, \n                                  Percent = prct_enroll_6mo) %>%\n  datatable(filter = \"none\", rownames = F,  options = list(dom = 't'), caption = \"Alaska Enrolled Intervention Within 180-Days\")\n```\n\n## Geographic Distribution\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n# Creating bvs variable vector\nbvs_vec <- birth15 %>% \n  select(bplace, M_grp:PH_REGION) %>% \n  select(-chewing_use) %>% \n  colnames()\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n# Creating a \"lite\" weight res_data_birth_2: res_data_birth_2_lite\nres_data_birth_2_lite <- res_data_birth_2 %>%\n  select(bc, date_of_first_screen:dhh)\n\n# Joining Birth Certificate data with EHDI data\nbirth16 <- birth15 %>%\n  left_join(res_data_birth_2_lite, by = c(\"birth_cert\" = \"bc\")) %>%\n  # Changing NA values to 0\n  mutate(diagnosis_within_90_days = ifelse(is.na(diagnosis_within_90_days), 0, diagnosis_within_90_days)) %>%\n  mutate(ei_before_6m = ifelse(is.na(ei_before_6m), 0, ei_before_6m)) %>%\n  mutate(dhh = ifelse(is.na(dhh), 0, dhh))\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 <- map_dfr(bvs_vec, ~ {\n  # The `across(all_of(.x))` syntax is crucial here. It allows\n  # you to group by a column name that is stored in a variable.\n  # Without this, the code would not work correctly.\n  birth16 %>%\n    group_by(across(all_of(.x))) %>%\n    summarise(\n      percent_scrn_30_days = (sum(screen_within_30_days, na.rm = TRUE)/\n                                n())*100,\n      num = sum(screen_within_30_days, na.rm = TRUE),\n      demon = n(),\n      .groups = \"drop\" # This removes the grouping, which is good practice\n    )  %>%\n    # Add a column to identify the variable used for grouping\n    rename(variable_value = 1) %>% \n    mutate(variable_name = .x) \n})\n\n# Changing NA values in variable_value to \"Unknown\"\nresults_scrn30 <- results_scrn30 %>%\n    mutate(variable_value = ifelse(is.na(variable_value), \n                                   \"Unknown\", variable_value))\n\ntables_scrn30 <- map(bvs_vec, ~ { \n  results_scrn30 %>%\n    filter(variable_name == .x) %>%\n  filter(!is.na(percent_scrn_30_days)) %>%\n    arrange(desc(percent_scrn_30_days)) %>%\n  mutate(percent_scrn_30_days = paste0(round(percent_scrn_30_days, 2), \"%\")) %>%\n    htmlTable::htmlTable(rnames = FALSE)\n})\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n\ngeo_results_scrn30 <- results_scrn30 %>%\n  filter(variable_name == \"PH_REGION\") %>%\n  filter(variable_value != \"Unknown\") %>%\n  mutate(percent_scrn_30_days = round(percent_scrn_30_days, 2))\n\n# Importing ak_sf\nak_sf <- st_read(dsn=\"R:\\\\ABDR\\\\Analysis_New\\\\ABDR_CASECONF\\\\shapefiles\",\n                 layer=\"PHR\",\n                 quiet = TRUE) %>%\n  mutate(XAPHR_LBL = ifelse(XAPHR_LBL == \"Anchorage Municipality\", \"Anchorage\", \n                ifelse(XAPHR_LBL == \"Matanuska-Susitna Borough\",  \"Mat-Su\",XAPHR_LBL)))\n\n # Joining ak_sf to p043_em2b\nak_sf_em <- geo_results_scrn30 %>% \n  left_join(ak_sf, by = c(\"variable_value\" = \"XAPHR_LBL\")) %>%\n        mutate(hover = paste(\"Region:\", variable_value,\n                             \"<br>Screening Rate:\", \n                             percent_scrn_30_days, \"%\",\n                             \"<br>Screened:\", num,\n                             \"<br>Alaskan Born:\", demon))\n\n# Creating a ggplot for ak_sf_em data\nscrn_map <- ggplot(data = ak_sf_em, \n             aes(geometry = geometry, \n                 fill = percent_scrn_30_days,\n                 text = paste(\"Region:\", variable_value,\n                              \"<br>Screening Rate:\", paste0(percent_scrn_30_days, \"%\"),\n                            \"<br>Screened:\", num,\n                            \"<br>Alaskan Born:\", demon))) +\n        geom_sf() +\n  viridis::scale_fill_viridis(option = \"mako\", direction = -1,\n                               begin = 0.2, end = 0.5) +\n      # scale_fill_gradientn(colors = RColorBrewer::brewer.pal(9, \"Blues\")[5:7]) +\n  # viridis::scale_fill_viridis(option = \"viridis\", begin = 0.8, end = 1, direction = 0) +\n        # viridis::scale_fill_viridis(option = \"cividis\", direction = -1) +\n        theme(axis.text.x = element_blank(),\n              axis.text.y = element_blank(),\n              axis.ticks = element_blank(),\n              panel.background = element_rect(fill = \"white\", \n                                              color = \"white\"),\n              legend.position = \"none\") +\n        ggtitle(\"Percent Screened Before 1 Month of Age by Public Health Region\")\n\nscrn_map_ly <- ggplotly(scrn_map, \n         tooltip = c(\"text\", \"size\")) %>%  \n  layout(xaxis = list(autorange = TRUE),\n         yaxis = list(autorange = TRUE))\nscrn_map_ly\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 <- map_dfr(bvs_vec, ~ {\n  # The `across(all_of(.x))` syntax is crucial here. It allows\n  # you to group by a column name that is stored in a variable.\n  # Without this, the code would not work correctly.\n  birth16 %>%\n    group_by(across(all_of(.x))) %>%\n    summarise(\n      percent_scrn_30_days = (sum(screen_within_30_days, na.rm = TRUE)/\n                                n())*100,\n      num = sum(screen_within_30_days, na.rm = TRUE),\n      demon = n(),\n      .groups = \"drop\" # This removes the grouping, which is good practice\n    )  %>%\n    # Add a column to identify the variable used for grouping\n    rename(variable_value = 1) %>% \n    mutate(variable_name = .x) \n})\n\n# Changing NA values in variable_value to \"Unknown\"\nresults_scrn30 <- results_scrn30 %>%\n    mutate(variable_value = ifelse(is.na(variable_value), \n                                   \"Unknown\", variable_value))\n\ntables_scrn30 <- map(bvs_vec, ~ { \n  results_scrn30 %>%\n    filter(variable_name == .x) %>%\n  filter(!is.na(percent_scrn_30_days)) %>%\n    arrange(desc(percent_scrn_30_days)) %>%\n  mutate(percent_scrn_30_days = paste0(round(percent_scrn_30_days, 2), \"%\")) %>%\n    htmlTable::htmlTable(rnames = FALSE)\n})\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 %>% \n  filter(variable_name == 'PH_REGION') %>% \n  select(-variable_name) %>%\n  mutate(percent_scrn_30_days = round(percent_scrn_30_days, 2)) %>%\ndatatable(, \n          #container = tables_scrn30[[9]], \n          options = list(pageLength = nrow(results_scrn30),\n                        dom = 't',\n                        initComplete = JS(\n                          \"function(settings, json) {\",\n                          \"$('.dataTables_wrapper tfoot').css({'text-align': 'left', 'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper tfoot td').css({'padding-left': '0', 'margin-left': '0', 'text-align': 'left'});\",\n                          \"$('.dataTables_wrapper tfoot tr').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('tfoot').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper thead th').css('text-align', 'left');\",\n                          \"}\"\n                        )),\n          rownames = F, \n          colnames = c(\"Region\", \"Screened Percent\", \"Screened Count\", \"AK Births\"))\n```\n\n## Demographic Variables\n\n## Place of Birth\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 %>% \n  filter(variable_name == 'bplace') %>% \n  select(-variable_name) %>%\n  mutate(percent_scrn_30_days = round(percent_scrn_30_days, 2)) %>%\ndatatable(, \n          #container = tables_scrn30[[9]], \n          options = list(pageLength = nrow(results_scrn30),\n                        dom = 't',\n                        initComplete = JS(\n                          \"function(settings, json) {\",\n                          \"$('.dataTables_wrapper tfoot').css({'text-align': 'left', 'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper tfoot td').css({'padding-left': '0', 'margin-left': '0', 'text-align': 'left'});\",\n                          \"$('.dataTables_wrapper tfoot tr').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('tfoot').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper thead th').css('text-align', 'left');\",\n                          \"}\"\n                        )),\n          rownames = F, \n          colnames = c(\"Place of Birth\", \"Screened Percent\", \"Screened Count\", \"AK Births\")#, caption = \"Place of Birth\"\n          )\n```\n\n## Medicaid Status\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 %>% \n  filter(variable_name == 'eligible') %>% \n  select(-variable_name) %>%\n  mutate(percent_scrn_30_days = round(percent_scrn_30_days, 2)) %>%\ndatatable(, \n          #container = tables_scrn30[[9]], \n          options = list(pageLength = nrow(results_scrn30),\n                        dom = 't',\n                        initComplete = JS(\n                          \"function(settings, json) {\",\n                          \"$('.dataTables_wrapper tfoot').css({'text-align': 'left', 'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper tfoot td').css({'padding-left': '0', 'margin-left': '0', 'text-align': 'left'});\",\n                          \"$('.dataTables_wrapper tfoot tr').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('tfoot').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper thead th').css('text-align', 'left');\",\n                          \"}\"\n                        )),\n          rownames = F, \n          colnames = c(\"Medicaid Status\", \"Screened Percent\", \"Screened Count\", \"AK Births\")\n          )\n```\n\n## Maternal Age\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 %>% \n  filter(variable_name == 'M_grp') %>% \n  select(-variable_name) %>%\n  mutate(percent_scrn_30_days = round(percent_scrn_30_days, 2)) %>%\ndatatable(, \n          #container = tables_scrn30[[9]], \n          options = list(pageLength = nrow(results_scrn30),\n                        dom = 't',\n                        initComplete = JS(\n                          \"function(settings, json) {\",\n                          \"$('.dataTables_wrapper tfoot').css({'text-align': 'left', 'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper tfoot td').css({'padding-left': '0', 'margin-left': '0', 'text-align': 'left'});\",\n                          \"$('.dataTables_wrapper tfoot tr').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('tfoot').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper thead th').css('text-align', 'left');\",\n                          \"}\"\n                        )),\n          rownames = F, \n          colnames = c(\"Maternal Age Group\", \"Screened Percent\", \"Screened Count\", \"AK Births\")\n          )\n```\n\n## Maternal Race\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 %>% \n  filter(variable_name == 'M_rce') %>% \n  select(-variable_name) %>%\n  mutate(percent_scrn_30_days = round(percent_scrn_30_days, 2)) %>%\ndatatable(, \n          #container = tables_scrn30[[9]], \n          options = list(pageLength = nrow(results_scrn30),\n                        dom = 't',\n                        initComplete = JS(\n                          \"function(settings, json) {\",\n                          \"$('.dataTables_wrapper tfoot').css({'text-align': 'left', 'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper tfoot td').css({'padding-left': '0', 'margin-left': '0', 'text-align': 'left'});\",\n                          \"$('.dataTables_wrapper tfoot tr').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('tfoot').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper thead th').css('text-align', 'left');\",\n                          \"}\"\n                        )),\n          rownames = F, \n          colnames = c(\"Maternal Race\", \"Screened Percent\", \"Screened Count\", \"AK Births\")\n          )\n```\n\n## Marital Status\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 %>% \n  filter(variable_name == 'marital_status') %>% \n  select(-variable_name) %>%\n  mutate(percent_scrn_30_days = round(percent_scrn_30_days, 2)) %>%\ndatatable(, \n          #container = tables_scrn30[[9]], \n          options = list(pageLength = nrow(results_scrn30),\n                        dom = 't',\n                        initComplete = JS(\n                          \"function(settings, json) {\",\n                          \"$('.dataTables_wrapper tfoot').css({'text-align': 'left', 'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper tfoot td').css({'padding-left': '0', 'margin-left': '0', 'text-align': 'left'});\",\n                          \"$('.dataTables_wrapper tfoot tr').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('tfoot').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper thead th').css('text-align', 'left');\",\n                          \"}\"\n                        )),\n          rownames = F, \n          colnames = c(\"Marital Status\", \"Screened Percent\", \"Screened Count\", \"AK Births\")\n          )\n```\n\n## Any Substance Use\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\nresults_scrn30 %>% \n  filter(variable_name == 'substance') %>% \n  select(-variable_name) %>%\n  mutate(percent_scrn_30_days = round(percent_scrn_30_days, 2)) %>%\ndatatable(, \n          #container = tables_scrn30[[9]], \n          options = list(pageLength = nrow(results_scrn30),\n                        dom = 't',\n                        initComplete = JS(\n                          \"function(settings, json) {\",\n                          \"$('.dataTables_wrapper tfoot').css({'text-align': 'left', 'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper tfoot td').css({'padding-left': '0', 'margin-left': '0', 'text-align': 'left'});\",\n                          \"$('.dataTables_wrapper tfoot tr').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('tfoot').css({'padding-left': '0', 'margin-left': '0'});\",\n                          \"$('.dataTables_wrapper thead th').css('text-align', 'left');\",\n                          \"}\"\n                        )),\n          rownames = F, \n          colnames = c(\"Substance Use\", \"Screened Percent\", \"Screened Count\", \"AK Births\")\n          )\n```\n\n## Prevalence Estimate of DHH in Alaska\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n# Creating hearing data dataframe\noutcome_cat <- res_data_birth_2 %>% \n  filter(screen_not_pass == 1) %>%\n  group_by(cdc_dx_outcome) %>%\n  summarise(Total = n()) %>%\n  filter(!is.na(cdc_dx_outcome)) %>%\n  select(cdc_dx_outcome)\n\n\noutcome_count <- res_data_birth_2 %>% \n   filter(screen_not_pass == 1) %>%\n  group_by(cdc_dx_outcome) %>%\n  summarise(Count = n()) %>%\n  filter(!is.na(cdc_dx_outcome)) %>%\n  select(Count)\n\nhearing_data <- data.frame(\n  Category = c(outcome_cat), \n  Count = c(outcome_count)\n)\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n\n# Create shorter labels for better visualization\nhearing_data <- hearing_data %>%\n  rename(\"Category\" = cdc_dx_outcome) %>%\n  mutate(\n    Short_Label = case_when(\n      Category == \"Diagnosis - Hearing Loss/Deaf/Hard of Hearing\" ~ \"Hearing Loss/Deaf/HoH\",\n      Category == \"Diagnosis - No Hearing Loss\" ~ \"No Hearing Loss\",\n      Category == \"Diagnosis - Transient Hearing Loss\" ~ \"Transient Hearing Loss\",\n      Category == \"No Diagnosis - Audiologic Diagnosis in Process (Awaiting Diagnosis)\" ~ \"Awaiting Diagnosis\",\n      Category == \"No Diagnosis - Infant Died\" ~ \"Infant Died\",\n      Category == \"No Diagnosis - Moved out of Jurisdiction\" ~ \"Moved out of Jurisdiction\",\n      Category == \"No Diagnosis - Non-Resident\" ~ \"Non-Resident\",\n      Category == \"No Diagnosis - Parents/Family Contacted but Unresponsive\" ~ \"Family Unresponsive\",\n      Category == \"No Diagnosis - Parents/Family Declined Services\" ~ \"Family Declined Services\",\n      Category == \"No Diagnosis - Unable to Contact\" ~ \"Unable to Contact\",\n      Category == \"No Diagnosis - Unable to Receive Diagnostic Testing due to Medical Reasons\" ~ \"Medical Reasons\",\n      Category == \"No Diagnosis - Unknown\" ~ \"Unknown\",\n      TRUE ~ \"Other\"  # catch-all for any unmatched categories\n    )\n  )\n\n# Calculate percentages\nhearing_data <- hearing_data %>%\n  mutate(\n    Percentage = round(Count / sum(Count) * 100, 1),\n    Label = paste0(Short_Label, \"\\n\", Count, \" (\", Percentage, \"%)\")\n  )\n\n# Create color palette - using distinct colors for better differentiation\ncolors <- c(\"#FF6B6B\", \"#4ECDC4\", \"#45B7D1\", \"#96CEB4\", \"#FFEAA7\", \n           \"#DDA0DD\", \"#98D8C8\", \"#F7DC6F\", \"#BB8FCE\", \"#85C1E9\",\n           \"#F8C471\", \"#CD6155\")\n\n# Create the doughnut plot\np <- ggplot(hearing_data, aes(x = 2, y = Count, fill = Short_Label)) +\n  geom_bar(stat = \"identity\", width = 1, color = \"white\", size = 0.5) +\n  coord_polar(theta = \"y\", start = 0) +\n  xlim(0.5, 2.5) +  # This creates the hole in the middle\n  scale_fill_manual(values = colors) +\n  theme_void() +\n  theme(\n    legend.position = \"right\",\n    legend.title = element_blank(),\n    legend.text = element_text(size = 9),\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5, size = 11, color = \"gray60\")\n  ) +\n  labs(\n    title = \"Distribution of Hearing Evaluation Outcomes\",\n    subtitle = paste(\"Total Cases:\", sum(hearing_data$Count), \"newborns with a failed hearing screen\")\n  )\n\n# Display the plot\nprint(p)\n\n# # Print summary statistics\n# cat(\"\\nSummary Statistics:\\n\")\n# cat(\"==================\\n\")\n# cat(\"Total cases:\", sum(hearing_data$Count), \"\\n\")\n# cat(\"Number of categories:\", nrow(hearing_data), \"\\n\")\n# cat(\"\\nTop 3 categories by count:\\n\")\n# top3 <- hearing_data[order(-hearing_data$Count), ][1:3, ]\n# for(i in 1:3) {\n#   cat(paste0(i, \". \", top3$Short_Label[i], \": \", top3$Count[i], \n#              \" (\", top3$Percentage[i], \"%)\\n\"))\n#}\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n\nhearing_data %>%\n  select(Short_Label, Count, Percentage) %>%\n  datatable(data = ., rownames = FALSE)\n```\n\n```{r}\n#| warning: false \n#| message: false \n#| echo: false\n\n\nhearing_data2 <- hearing_data %>%\n  select(Short_Label, Count, Percentage) %>%\n  mutate(screen_result = ifelse(\n    Short_Label == \"Hearing Loss/Deaf/HoH\" |\n      Short_Label == \"No Hearing Loss\" |\n        Short_Label == \"Transient Hearing Loss\",\n    \"Known\", \"Unknown\"\n    ))\n\n\nTotal <- hearing_data %>% \n  summarize(total_n = sum(Count)) %>%\n  pull(total_n)\n\ndeaf <- hearing_data %>% \n  filter(Short_Label == \"Hearing Loss/Deaf/HoH\") %>%\n  pull(Count)\n\nnot_deaf <- hearing_data %>% \n  filter(Short_Label %in% c(\"No Hearing Loss\", \"Transient Hearing Loss\")) %>%\n  summarise(not_deaf_count = sum(Count)) %>%\n  pull(not_deaf_count)\n\nscreen_results <- deaf + not_deaf\n\ndeaf_to_screen_rate <- round((deaf/screen_results)*100, 2)\n\nscreen_no_results <- hearing_data2 %>%\n  filter(screen_result == \"Unknown\") %>%\n  summarise(screen_no_results_n = sum(Count)) %>%\n  pull(screen_no_results_n)\n\nestimated_screen_results <- screen_no_results*(deaf_to_screen_rate/100)\n\n# Calculating any diagnosed dhh that were not screened\nno_screen_dhh <- res_data_birth_2 %>% \n  filter(screen_not_pass == 0) %>%\n  filter(cdc_dx_outcome == \"Diagnosis - Hearing Loss/Deaf/Hard of Hearing\") %>%\n  summarise(Total = n()) %>%\n  pull(Total)\n  \n\ntotal_dhh <- deaf + \n  estimated_screen_results + \n  no_screen_dhh\n\nak_dhh10000 <- round(total_dhh/nrow(bvs)*10000, 2)\n  \n```\n\n## Deaf or Hard of Hearing Prevalence\n\nOut of the `r Total` newborns with a failed hearing screen, only `r screen_results` have a known hearing evaluation. The number of infants diagnosed as DHH after failing a hearing screen is `r deaf` (out of `r screen_results` with a hearing evaluation). The proportion of DHH among screened infants is `r paste0(deaf_to_screen_rate, \"%\")` `r deaf` / `r screen_results`. The number of infants with a failed hearing screen that do not have a diagnosis is `r screen_no_results`. The number of DHH without a documented hearing screen is `r no_screen_dhh`\n\nAssuming a consistent rate of DHH among screened newborns, the prevalence estimate for DHH for the year is `r ak_dhh10000` per 10,000 live Alaskan births.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":true,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"EHDI_Annual_Report_2023.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"visual","theme":["cosmo","brand"],"title":"EHDI 2023 Annual Report","author":"Alaska Early Hearing Detection & Intervention"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}